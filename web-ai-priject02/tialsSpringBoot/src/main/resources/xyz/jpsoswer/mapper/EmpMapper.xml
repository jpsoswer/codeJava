<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.jpsoswer.mapper.EmpMapper">
    <update id="updateById">
        update emp
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="job != null">
                job = #{job},
            </if>
            <if test="salary != null">
                salary = #{salary},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <!-- 确保update_time总是被设置 -->
            update_time = #{updateTime}
        </set>
        where id = #{id}
    </update>

    <!-- 删除员工基本信息-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <select id="list" resultType="xyz.jpsoswer.pojo.Emp">
        select e.*,d.name deptName from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by e.update_time desc
    </select>
    
    <!--    定义resultMap接口-->
    <resultMap id="empResultMap" type="xyz.jpsoswer.pojo.Emp">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="job" column="job"/>
        <result property="salary" column="salary"/>
        <result property="image" column="image"/>
        <result property="entryDate" column="entry_date"/>

        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="deptId" column="dept_id"/>
        <!-- 关联部门名称（一对一） -->
        <result property="deptName" column="dept_name"/>
        <!-- 工作经历列表（一对多） -->
        <collection property="exprList" ofType="xyz.jpsoswer.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_empid" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>
    <!--    根据员工基本信息以及员工工作经历信息查询数据-->
    <select id="getInfo" resultMap="empResultMap">
        select
            e.*,
            ee.id ee_id,
            ee.emp_id ee_empid,
            ee.begin ee_begin,
            ee.end ee_end,
            ee.company ee_company,
            ee.job ee_job
        from emp e left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id};
    </select>

    <!--    统计员工职位人数-->
    <select id="countEmpJobData" resultType="java.util.Map">
        select
            (case emp.job when 1 then '班主任'
                          when 2 then '讲师'
                          when 3 then '学工主管'
                          when 4 then '教研主管'
                          when 5 then '咨询师'
                          else '其他' end) pos,
            count(*) num
        from emp group by job order by num
    </select>
    <select id="countEmpGenderData" resultType="java.util.Map">
        select if(gender = 1,'男性员工','女性员工') name,
               count(*) value
        from emp group by gender;
    </select>

    <!--统计各员工学历人人数信息-->
    <select id="getStudentCount" resultType="java.util.Map">
        select
            (case student.degree when 1 then '初中'
                                 when 2 then '高中'
                                 when 3 then '大专'
                                 when 4 then '本科'
                                 when 5 then '硕士'
                                 when 6 then '博士'
                                 else '其他' end) name,
            count(*) value
        from student group by degree order by value
    </select>

    <!--统计班级人数-->
    <select id="getStudentData" resultType="java.util.Map">
        select
            (case student.clazz_id when 1 then 'JavaEE就业163期'
                                   when 4 then '前端就业90期'
                                   when 5 then 'JavaEE就业165期'
                                   when 6 then 'JavaEE就业166期'
                                   when 7 then '大数据就业58期'
                                   when 8 then 'JavaEE就业167期'
                                   when 13 then '云计算运维'
                                   else '其他' end ) name,
            count(*) value
        from student group by clazz_id order by value
    </select>

</mapper>